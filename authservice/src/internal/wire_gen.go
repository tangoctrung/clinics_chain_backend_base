// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/minh1611/clinics_chain_management/authservice/src/internal/api"
	"github.com/minh1611/clinics_chain_management/authservice/src/internal/db"
	"github.com/minh1611/clinics_chain_management/authservice/src/internal/db/psql"
	"github.com/minh1611/clinics_chain_management/authservice/src/internal/model"
)

// Injectors from server.wire.go:

func InitMainServer(ctx context.Context, opts ServerOptions) (*Server, error) {
	dbDsn := opts.DBDsn
	gormDB, err := db.ConnectGorm(dbDsn)
	if err != nil {
		return nil, err
	}
	dbInterfaces := psql.InterfaceProvider()
	serverCDBRepo := &psql.ServerCDBRepo{
		Db:         gormDB,
		Context:    ctx,
		Interfaces: dbInterfaces,
	}
	serverModel := &model.ServerModel{
		Ctx:  ctx,
		Repo: serverCDBRepo,
	}
	authServer := &api.AuthServer{
		Model: serverModel,
		Repo:  serverCDBRepo,
	}
	server := &Server{
		AuthServer: authServer,
		MainRepo:   serverCDBRepo,
	}
	return server, nil
}

// server.wire.go:

type Server struct {
	AuthServer *api.AuthServer
	MainRepo   db.ServerRepo
}

type ServerOptions struct {
	DBDsn db.DBDsn
}
